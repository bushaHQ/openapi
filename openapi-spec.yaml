openapi: 3.0.0
info:
  title: Busha API
  contact:
    email: developers@busha.co
  description: |
    ## Introduction
    The **Busha API** is designed to provide businesses with tools for borderless financial transactions and operations, enabling modern, global money management. It serves as the backbone for facilitating:
    - Creation and management of multi-currency balances
    - Retrieval of real-time cryptocurrency rates
    - Substantial data insights for business owners

    Whether youâ€™re a product-driven fintech or a developer building integrations, this API significantly accelerates implementation while reducing financial complexities.
    For detailed guides on API integration, visit our [official documentation]().


    ## Authentication
    All API requests require a **Bearer Token** for authentication, passed in the `Authorization` header.
    Your authorization value is a base64 encoded value of your api key and your secret key.
    You can obtain API tokens via your Busha user or business account. Authentication is mandatory to ensure secure and authorized interactions with the API.
    The API keys from the dashboard provides a base64 encoding of the your authorrization tokens.

    Your generated Key should look like this:
    `VURtNXhWcHueantkpaiewjo0S044MWsadfojienuoxRTiWDJaeWJaTGxxanZ3Ym10OU1RZnVWajVW=`

    Example Header:
    ``` curl
    Authorization: Bearer VURtNXhWcHueantkpaiewjo0S044MWsadfojienuoxRTiWDJaeWJaTGxxanZ3Ym10OU1RZnVWajVW=
    ```

    ## Error Handling
    #Standardized error responses ensure predictable interactions. Errors are detailed for easy debugging and understanding:
    | **Error Code** | **HTTP Status Code** | **Description** |
    | --- | --- | --- |
    | `bad_request` | 400 | Invalid input or malformed request |
    | `unauthorized` | 401 | Invalid or missing authentication |
    | `not_found` | 404 | Resource not found |
    | `service_unavailable` | 503 | Server error |

    Basic Error Example:
    ``` json
    {
      "error": {
        "name": "bad_request",
        "message": "Invalid input data"
      }
    }
    ```

    Schema Error Body Example:
    ``` json
    {
      "error": {
        "name": "bad_request",
        "message": "Invalid input data"
      },
      "schema": {
        "reason": "The request body is defined as an object. However, it does not meet the schema requirements of the specification",
        "fix": "Ensure that the object being submitted, matches the schema correctly"
      }
    }
    ```

    Field Error Body Example:
    ``` json
    {
      "error": {
        "name": "bad_request",
        "message": "Invalid input data"
      },
      "fields": {
        "field1": [
          {
            "reason": "The request body is defined as an object. However, it does not meet the schema requirements of the specification",
          },
        ],
        "field2": [
          {
            "reason": "The request body is defined as an object. However, it does not meet the schema requirements of the specification",
          }
        ],
      }
    }
    ```

    ## Pagination
    Pagination uses cursors provided as:
    The API supports **cursor-based pagination** for endpoints with large datasets. Pagination uses a `next_cursor` and `previous_cursor` returned in the response.
    Example Response Format:
    ``` json
    {
      "current_entries_size": 10,
      "next_cursor": "base64_cursor_value",
      "previous_cursor": "base64_previous_cursor_value"
    }
    ```

    ## Rate Limiting
    Rate limits determine how many API calls can be made in a rolling minute. This ensures fair and optimized use of system resources.

    The rate limits allowed by each resource will be provided with the header:
    ```curl
    x-rate-limit 100
    ```
    If this header does not exist, then the rate limit is set at a default 100 req/min

    Requests exceeding the allocated quota will receive a `429 Too Many Requests` response.

    ##  Common Parameters
    Common parameters enhance consistency across endpoints:
      | **Parameter Name** | **Location** | **Description** | **Example** |
      | --- | --- | --- | --- |
      | `X-BU-PROFILE-ID` | Header | User profile identifier | `BUS_qwejinoiuiqw93ejjw` |
      | `id` | Path | Unique NanoID identifier | `dpt_jweqafajsndiun34fd` |
      | `cursor` | Query | Pagination cursor | `base64_cursor_string` |

    #### Paginated Response Example
      ``` json
      {
        "status": "success",
        "message": "Data retrieved",
        "pagination": {
          "next_cursor": "value_for_next_page",
          "current_entries_size": 20
        },
        "data": [...]
      }
      ```
  version: 1.0.0
servers:
  - url: https://api.sandbox.busha.so
    description: Sandbox Environment
  - url: https://api.busha.co
    description: Production Environment
tags:
  - name: Balances
    description: Handles account balances across different currencies
    x-displayName: Balances
  - name: Currencies
    description: |
      Endpoints to manage supported currencies, their properties, and network details.
    x-displayName: Currencies
  - name: Customers
    x-internal: false
    description: Handle customer requests and responses
    x-displayName: Customers
  - name: Miscellaneous
    description: Provides auxiliary APIs to complement and enhance other services.
    x-displayName: Miscellaneous
  - name: Pairs
    description: Access trading pair information and rates
    x-displayName: Pairs
  - name: Quotes
    description: Handle quotes requests and responses
    x-displayName: Quotes
  - name: Recipients
    x-displayName: Recipients
  - name: Transactions
    x-displayName: Transactions
  - name: Transfers
    x-displayName: Transfers
paths:
  /v1/balances:
    post:
      security:
        - Auth:
            - balances:write
            - api:write
      tags:
        - Balances
      operationId: createBalance
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      summary: Create currency balance
      description: Creates a new balance for managing funds in a specific currency.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBalanceRequest'
      responses:
        '201':
          description: Balance created successfully
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Balance'
        4XX:
          $ref: '#/components/responses/BalanceError4XX'
    get:
      tags:
        - Balances
      operationId: listBalances
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
        - name: currency
          in: query
          schema:
            $ref: '#/components/schemas/Currency'
      summary: List all balances
      description: Retrieves all account balances with their current status.
      responses:
        '200':
          description: List of account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceListResponse'
        4XX:
          $ref: '#/components/responses/BalanceError4XX'
      security:
        - Auth:
            - balances:read
            - api:read
  /v1/balances/{id}:
    get:
      tags:
        - Balances
      operationId: getBalance
      summary: Get balance details
      parameters:
        - $ref: '#/components/parameters/ParamUUID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Balance details retrieved successfully
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Balance'
        4XX:
          $ref: '#/components/responses/BalanceError4XX'
      security:
        - Auth:
            - balances:read
            - api:read
  /v1/currencies:
    get:
      tags:
        - Currencies
      summary: Retrieve supported currencies
      description: |
        Retrieves a list of all supported currencies along with their basic details. This endpoint can be used to display available currencies in wallets or APIs requiring currency data.
      operationId: listCurrencies
      parameters:
        - $ref: '#/components/parameters/CurrencyType'
      responses:
        '200':
          description: A list of supported currencies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesListResponse'
        4XX:
          $ref: '#/components/responses/CurrenciesError4XX'
      security: []
  /v1/currencies/{code}:
    get:
      tags:
        - Currencies
      summary: Retrieve details of a specific currency
      description: |
        Fetches detailed information about a specific currency using its unique code. This includes details such as network support, decimal precision, and transaction limits.
      parameters:
        - $ref: '#/components/parameters/CurrencyCodePathParam'
      operationId: getCurrency
      responses:
        '200':
          description: Details of the requested currency.
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Currencies'
        4XX:
          $ref: '#/components/responses/CurrenciesError4XX'
      security: []
  /v1/customers:
    post:
      x-internal: false
      security:
        - Auth:
            - customers:write
            - api:write
      summary: Create a new customer
      description: Creates a new customer entry in the system
      operationId: createCustomer
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        description: Customer details needed to create a new customer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '201':
          $ref: '#/components/responses/CustomerResponse'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
    get:
      x-internal: false
      summary: List Customers
      description: List all customers in created for the business
      operationId: listCustomers
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/LimitQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/CustomerListResponse'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
      security:
        - Auth:
            - customers:read
            - api:read
  /v1/customers/{id}:
    get:
      x-internal: false
      summary: Get a customer by ID
      description: Retrieve a specific customer by their unique ID
      operationId: getCustomerByID
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/ParamNanoID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponse'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
      security:
        - Auth:
            - customers:read
            - api:read
    put:
      x-internal: false
      security:
        - Auth:
            - customers:write
            - api:write
      summary: Update a customer
      description: Update the details of an existing customer
      operationId: updateCustomer
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/ParamNanoID'
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        description: Customer details to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponse'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
  /v1/customers/{id}/verify:
    post:
      x-internal: false
      security:
        - Auth:
            - customers:write
            - api:write
      summary: Verify a customer
      description: Verify the identity and information provided by a customer
      operationId: verifyCustomer
      tags:
        - Customers
      parameters:
        - $ref: '#/components/parameters/ParamNanoID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          $ref: '#/components/responses/GeneralResponse'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
  /v1/customers/industries:
    get:
      x-internal: false
      summary: List Business Industries
      description: List all business industries
      operationId: listIndustries
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      tags:
        - Customers
      responses:
        '200':
          $ref: '#/components/responses/CustomerBusinessIndustries'
        4XX:
          $ref: '#/components/responses/CustomerError4XX'
      security:
        - Auth:
            - customers:read
            - api:read
  /v1/validate:
    post:
      tags:
        - Miscellaneous
      summary: Validate payment destination
      description: validates a payment destination is valid
      operationId: validatePaymentDestination
      requestBody:
        description: validate a payment destination
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateDestinationRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateDestinationResponse'
        4XX:
          $ref: '#/components/responses/MiscellaneousError4XX'
      security: []
  /v1/banks:
    get:
      tags:
        - Miscellaneous
      summary: List banks resource
      description: Returns a list of all banks and their bank codes
      operationId: listBanks
      parameters:
        - $ref: '#/components/parameters/CurrencyQueryParam'
        - $ref: '#/components/parameters/CountryQueryParam'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBankResponse'
        4XX:
          $ref: '#/components/responses/MiscellaneousError4XX'
      security: []
  /v1/countries:
    get:
      tags:
        - Miscellaneous
      summary: Returns a list of countries
      description: Returns a list of countries and their supported payment channels
      operationId: listCountries
      parameters:
        - $ref: '#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/CountryQueryParam'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security: []
  /v1/pay/{username}:
    get:
      tags:
        - Miscellaneous
      summary: Look up users addresses
      description: Returns a user's addresses based on currency and network
      operationId: lookupUserAddresses
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: Username to lookup addresses for
          x-oapi-codegen-extra-tags:
            validate: min_len:3|max_len:50|ends_with:busha
            filter: trim|lower
        - name: currency
          in: query
          required: true
          description: Filter by currency
          x-oapi-codegen-extra-tags:
            validate: required|min_len:3|max_len:10
          schema:
            type: string
            example: USDT
        - name: networks
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Currency'
          description: Filter addresses by network
          style: form
          x-oapi-codegen-extra-tags:
            filter: slice_upper|slice_trim
      responses:
        '200':
          $ref: '#/components/responses/LookupResponses'
        4XX:
          $ref: '#/components/responses/MiscellaneousError4XX'
      security: []
  /v1/pairs:
    get:
      tags:
        - Pairs
      summary: List trading pairs
      description: Retrieves all available trading pairs with their current rates.
      operationId: listPairs
      parameters:
        - name: id
          in: query
          x-oapi-codegen-extra-tags:
            validate: min_len:6|max_len:20
            filter: trim|upper
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum:
              - fiat
              - stablecoin
              - crypto
        - name: business
          in: query
          schema:
            type: boolean
        - name: currency
          in: query
          x-oapi-codegen-extra-tags:
            validate: min_len:3|max_len:10
            filter: trim|upper
          schema:
            $ref: '#/components/schemas/Currency'
      responses:
        '200':
          description: List of trading pairs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PairsListResponse'
        4XX:
          $ref: '#/components/responses/PairError4XX'
      security: []
  /v1/quotes:
    post:
      security:
        - Auth:
            - quotes:write
            - api:write
      summary: Create a new Quote
      description: Create Quote
      operationId: createQuote
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        description: Create a new Quote
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteRequest'
      responses:
        '201':
          $ref: '#/components/responses/QuoteResponse'
        4XX:
          $ref: '#/components/responses/QuoteError4XX'
    get:
      summary: List Quotes
      description: List Quotes
      operationId: listQuotes
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
        - $ref: '#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/LimitQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/QuotesListResponse'
        4XX:
          $ref: '#/components/responses/QuoteError4XX'
      security:
        - Auth:
            - quotes:read
            - api:read
  /v1/quotes/{id}:
    get:
      summary: Get Quote
      description: Returns a single quote by it's unique ID
      operationId: getQuote
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/ParamUUID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          $ref: '#/components/responses/QuoteResponse'
        4XX:
          $ref: '#/components/responses/QuoteError4XX'
      security:
        - Auth:
            - quotes:read
            - api:read
  /v1/quotes/unauthenticated:
    post:
      security: []
      summary: Create Unauthenticated Quotes
      description: Create Unauthenticated Quote
      operationId: unauthenticatedCreateQuote
      tags:
        - Quotes
      requestBody:
        description: Create a unauthenticated Quote
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnauthenticatedCreateQuote'
      responses:
        '201':
          $ref: '#/components/responses/QuoteResponse'
        4XX:
          $ref: '#/components/responses/QuoteError4XX'
  /v1/quote/payment_options:
    get:
      summary: List Payment Options
      description: List Fiat Payment Options
      operationId: listPaymentOptions
      tags:
        - Quotes
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
        - name: currency
          in: query
          required: false
          description: The currency to get payment options for.
          schema:
            type: string
            example: USD
        - name: support_conversion
          in: query
          required: false
          description: This shows if the payment options is supported for conversions
          schema:
            type: boolean
        - name: type
          in: query
          required: false
          description: The type of payment options to retrieve.
          schema:
            type: string
            example: withdraw
            enum:
              - withdraw
              - deposit
        - name: amount
          in: query
          required: false
          description: The amount to get payment options for.
          schema:
            type: number
            example: 1500
      responses:
        '200':
          $ref: '#/components/responses/PaymentOptionsListResponse'
        4XX:
          $ref: '#/components/responses/QuoteError4XX'
      security:
        - Auth:
            - quotes:read
            - api:read
  /v1/recipients:
    post:
      security:
        - Auth:
            - recipients:write
            - api:write
      tags:
        - Recipients
      operationId: createRecipient
      summary: Creates a recipient
      description: Create a new recipient for transfers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRecipientRequest'
      responses:
        '201':
          description: Recipient created successfully
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Recipient'
        4XX:
          $ref: '#/components/responses/RecipientError4XX'
    get:
      tags:
        - Recipients
      operationId: listRecipients
      summary: List recipients
      description: Retrieve a list of all recipients
      parameters:
        - $ref: '#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/CurrencyQueryParam'
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/CountryQueryParam'
        - $ref: '#/components/parameters/ProfileHeader'
        - name: type
          in: query
          description: Filter by recipient type
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filter by recipient the requirement category
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Recipients retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientListResponse'
        4XX:
          $ref: '#/components/responses/RecipientError4XX'
      security:
        - Auth:
            - recipients:read
            - api:read
  /v1/recipients/{id}:
    get:
      tags:
        - Recipients
      summary: Retrieve a recipient
      description: Get details of a specific recipient
      operationId: getRecipient
      parameters:
        - $ref: '#/components/parameters/ParamUUID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Recipient retrieved successfully
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Recipient'
        4XX:
          $ref: '#/components/responses/RecipientError4XX'
      security:
        - Auth:
            - recipients:read
            - api:read
  /v1/recipient-requirements:
    get:
      tags:
        - Recipients
      summary: List recipient requirements
      description: Retrieve recipient requirements for specific currency and country combinations
      operationId: listRecipientRequirements
      parameters:
        - name: currency_id
          in: query
          description: Filter by currency code (e.g., KES, NGN)
          required: false
          schema:
            $ref: '#/components/schemas/Currency'
        - name: country_id
          in: query
          description: Filter by country code (e.g., KE, NG)
          required: false
          schema:
            $ref: '#/components/schemas/CountryID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Recipient requirements retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipientRequirementListResponse'
        4XX:
          $ref: '#/components/responses/RecipientError4XX'
      security:
        - Auth:
            - recipients:read
            - api:read
  /v1/recipients/resolve-bank-account:
    post:
      security:
        - Auth:
            - recipients:write
            - api:write
      tags:
        - Recipients
      operationId: resolveBankAccount
      summary: Resolves a bank account
      description: Resolves a bank account for bank transfers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolveBankAccountRequest'
      responses:
        '201':
          description: Recipient created successfully
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ResolveBankAccountResponse'
        4XX:
          $ref: '#/components/responses/RecipientError4XX'
  /v1/transactions:
    get:
      tags:
        - Transactions
      description: Returns a list of transactions
      operationId: listTransactions
      summary: List transactions
      parameters:
        - $ref: '#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/CurrencyQueryParam'
        - name: is_fiat
          in: query
          description: Filter by fiat currencies
          required: false
          schema:
            type: boolean
        - name: is_credit
          in: query
          description: Filter by transactions that are credit
          required: false
          schema:
            type: boolean
        - name: history_id
          in: query
          description: Filter by history ID
          required: false
          schema:
            type: string
            example: EPL_FjgpvrhBW2VF
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/LimitQueryParam'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionsListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - Auth:
            - transactions:read
            - api:read
  /v1/transactions/{id}:
    get:
      tags:
        - Transactions
      description: Retrieves a transactions
      operationId: getTransaction
      summary: Get transaction
      parameters:
        - $ref: '#/components/parameters/ParamUUID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                required:
                  - data
                allOf:
                  - $ref: '#/components/schemas/BaseSchema'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Transaction'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - Auth:
            - transactions:read
            - api:read
  /v1/transfers:
    post:
      security:
        - Auth:
            - transfers:write
            - api:write
      summary: Create transfer
      description: Create a transfer object
      operationId: createTransfer
      tags:
        - Transfers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
      requestBody:
        description: Transfer Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
      responses:
        '201':
          $ref: '#/components/responses/TransferResponse'
        4XX:
          $ref: '#/components/responses/TransferError4XX'
    get:
      summary: List transfers
      description: Gets all transfers
      operationId: listTransfer
      tags:
        - Transfers
      parameters:
        - $ref: '#/components/parameters/ProfileHeader'
        - name: source_currency
          in: query
          description: Filter by source_currency code
          required: false
          x-oapi-codegen-extra-tags:
            validate: min_len:3|max_len:10
            filter: trim|upper
          schema:
            type: string
        - name: target_currency
          in: query
          description: Filter by target_currency code
          required: false
          x-oapi-codegen-extra-tags:
            validate: min_len:3|max_len:10
            filter: trim|upper
          schema:
            type: string
        - name: status
          in: query
          description: Filter by status
          required: false
          schema:
            type: string
        - name: referred
          in: query
          description: Specify whether to get referred transfers or not
          required: false
          schema:
            type: boolean
        - name: trade
          in: query
          description: Filter Transfers by "buy" or "sell" trades
          required: false
          schema:
            type: string
            enum:
              - buy
              - sell
              - exchange
              - non_exchange
        - $ref: '#/components/parameters/CursorQueryParams'
        - $ref: '#/components/parameters/SortQueryParam'
        - $ref: '#/components/parameters/LimitQueryParam'
      responses:
        '200':
          $ref: '#/components/responses/TransferListResponse'
        4XX:
          $ref: '#/components/responses/TransferError4XX'
      security:
        - Auth:
            - transfers:read
            - api:read
  /v1/transfers/{id}:
    get:
      summary: Get transfer
      description: Retrieves a transfer
      operationId: getTransfer
      tags:
        - Transfers
      parameters:
        - $ref: '#/components/parameters/ParamNanoID'
        - $ref: '#/components/parameters/ProfileHeader'
      responses:
        '200':
          $ref: '#/components/responses/TransferResponse'
        4XX:
          $ref: '#/components/responses/TransferError4XX'
      security:
        - Auth:
            - transfers:read
            - api:read
components:
  parameters:
    ProfileHeader:
      in: header
      name: X-BU-PROFILE-ID
      required: false
      description: User profile header
      schema:
        type: string
        example: BUS_YOK8tp5Zga01qOKEsqp07
    ParamUUID:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: uuid
        example: 550e8400-e29b-41d4-a716-446655440000
        x-go-type: string
      x-oapi-codegen-extra-tags:
        validate: required|uuid
    CurrencyType:
      name: type
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            - fiat
            - crypto
            - stablecoin
      style: form
      example: fiat
    CurrencyCodePathParam:
      name: code
      in: path
      required: true
      description: The currency path parameter
      schema:
        type: string
        example: BTC
        x-go-type: string
    CursorQueryParams:
      name: cursor
      in: query
      description: The cursor
      schema:
        type: string
        format: string
        example: base64_encoding
    LimitQueryParam:
      name: limit
      in: query
      description: The number of items to return
      schema:
        type: integer
        example: 10
        x-go-type: uint64
    ParamNanoID:
      in: path
      name: id
      required: true
      schema:
        type: string
        format: nanoid
        example: bus_123456789
      x-oapi-codegen-extra-tags:
        validate: required|nanoid
    ParamNanoPlanID:
      in: path
      name: plan_id
      required: true
      schema:
        type: string
        format: nanoid
        example: bus_123456789
      x-oapi-codegen-extra-tags:
        validate: required|nanoid
    SortQueryParam:
      name: sort
      in: query
      description: The order to sort the results
      schema:
        type: string
        enum:
          - asc
          - desc
        example: asc
    CurrencyQueryParam:
      name: currency
      in: query
      required: false
      description: Filter by currency
      x-oapi-codegen-extra-tags:
        validate: min_len:3|max_len:10
        filter: trim|upper
      schema:
        type: string
    CountryQueryParam:
      name: country
      in: query
      x-oapi-codegen-extra-tags:
        validate: alpha2
        filter: trim|upper
      schema:
        type: string
  schemas:
    Balance:
      type: object
      required:
        - id
        - currency
        - name
        - type
        - pending
        - available
        - total
        - user_id
        - profile_id
      properties:
        id:
          $ref: '#/components/schemas/ResourceUUID'
        user_id:
          $ref: '#/components/schemas/ID'
        profile_id:
          $ref: '#/components/schemas/ID'
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 6
        name:
          type: string
          x-order: 7
          example: Bitcoin
        type:
          type: string
          x-order: 8
          enum:
            - fiat
            - crypto
          example: crypto
        pending:
          $ref: '#/components/schemas/AmountWithCurrency'
        available:
          $ref: '#/components/schemas/AmountWithCurrency'
        total:
          $ref: '#/components/schemas/AmountWithCurrency'
    Amount:
      $ref: '#/components/schemas/AmountWithCurrency'
    BalanceListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          required:
            - pagination
          properties:
            pagination:
              $ref: '#/components/schemas/CursorPagination'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Balance'
    CreateBalanceRequest:
      type: object
      required:
        - currency
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
    Currency:
      type: string
      x-order: 20
      example: BTC
      format: string
      maxLength: 10
      minLength: 1
      description: A valid currency
      x-oapi-codegen-extra-tags:
        validate: required|min_len:3|max_len:10
        filter: trim|upper
    BaseSchema:
      description: General response Values
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          x-order: 1
          x-go-type: string
          enum:
            - success
            - error
          example: success
        message:
          type: string
          x-order: 2
          example: message for success
    CursorPagination:
      description: Cursor-based pagination values
      type: object
      required:
        - current_entries_size
      properties:
        next_cursor:
          type: string
          example: MjAyNC0xMC0xNVQxMTowNTo1My45NTkxNDErMDE6MDA=
        current_entries_size:
          type: integer
          example: 20
        previous_cursor:
          type: string
          example: MjAyNC0xMC0xNVQxMDowNTo1My45NTIxQjE3MDE6MDA=
    ResourceUUID:
      type: string
      x-order: 1
      example: 550e8400-e29b-41d4-a716-446655440000
      format: uuid
      description: A valid UUID
      x-oapi-codegen-extra-tags:
        validate: required|uuid
      x-go-type: uuid.UUID
      x-go-type-import:
        path: github.com/gofrs/uuid
        name: uuid
    ID:
      type: string
      x-order: 4
      example: platform_123456
      format: nanoid
      description: A valid id that supports uuid and nanoid
      x-oapi-codegen-extra-tags:
        validate: required|nano|string
    Decimal:
      type: string
      description: decimal value
      example: '100'
      x-go-type: decimal.Decimal
      x-go-type-import:
        path: github.com/shopspring/decimal
        name: decimal
    AmountWithCurrency:
      type: object
      description: Amount with currency
      required:
        - amount
        - currency
      properties:
        amount:
          $ref: '#/components/schemas/Decimal'
        currency:
          $ref: '#/components/schemas/Currency'
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - name
            - message
          properties:
            name:
              type: string
              x-order: 40
              example: bad_request
            message:
              type: string
              example: Invalid Request
        fields:
          type: object
        schema:
          type: array
          items:
            type: object
      example:
        error:
          name: bad_request
          message: Invalid Request
    Currencies:
      type: object
      required:
        - name
        - code
        - decimals
        - precision
        - default_network
        - supported_networks
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 1
        name:
          type: string
          x-order: 5
          example: Bitcoin
          description: The official name of the cryptocurrency.
        display_name:
          type: string
          x-order: 6
          example: Bitcoin (BTC)
          description: The formatted display name of the cryptocurrency.
        type:
          type: string
          x-order: 7
          enum:
            - fiat
            - crypto
            - stablecoin
          description: Indicates whether the cryptocurrency is a stablecoin.
        decimals:
          type: string
          x-order: 8
          example: '8'
          description: |
            The number of decimal places supported by the blockchain. Defines how the currency value is divided.
        default_network:
          type: string
          x-order: 9
          description: The identifier of the default network for this currency.
          example: ethereum
        deposit:
          type: boolean
          x-order: 10
          description: Indicates if deposits are supported for this currency.
        icon:
          allOf:
            - $ref: '#/components/schemas/UrlField'
          x-order: 11
        withdrawal:
          type: boolean
          x-order: 12
          description: Indicates if withdrawals are supported for this currency.
        precision:
          type: string
          x-order: 13
          example: '8'
          description: |
            The level of precision supported by this service. This may differ from blockchain-level precision in some cases.
        supported_networks:
          type: array
          x-order: 14
          description: A list of networks supported by the currency, including details for each.
          items:
            $ref: '#/components/schemas/Network'
        is_ramp_sell_supported:
          type: boolean
          x-order: 15
          description: Indicates if ramp sell is supported for this currency.
          example: true
        is_ramp_buy_supported:
          type: boolean
          x-order: 16
          description: Indicates if ramp buy is supported for this currency.
          example: true
        maximum_ramp_buy:
          type: string
          x-order: 17
          description: The maximum amount that can be purchased through the ramp process for this currency.
          example: '1000'
        maximum_ramp_sell:
          type: string
          x-order: 18
          description: The maximum amount that can be sold through the ramp process for this currency.
          example: '1000'
    Network:
      type: object
      required:
        - id
        - name
        - status
      properties:
        id:
          type: string
          x-order: 1
          example: ethereum
          description: The unique identifier for the blockchain network.
        name:
          type: string
          example: Ethereum
          description: The descriptive name of the network.
        status:
          type: string
          example: active
          description: The current operational status of the network.
        transaction_link:
          $ref: '#/components/schemas/UrlField'
        address_link:
          $ref: '#/components/schemas/UrlField'
        max_withdrawal_amount:
          type: string
          example: '100.00'
          description: Maximum withdrawal amount for this network in the currency.
        min_withdrawal_amount:
          type: string
          example: '0.01'
          description: Minimum withdrawal amount for this network in the currency.
        min_deposit_amount:
          type: string
          example: '0.001'
          description: Minimum deposit amount for this network in the currency.
        confirmations_required:
          type: string
          example: '12'
          description: Number of confirmations required for deposits to be recognized.
        network:
          type: string
          example: ETH
          description: The blockchain network for the currency.
        withdrawal_fee:
          type: string
          example: '0.0001'
          description: The withdrawal fee for the network in the currency.
        address_regex:
          $ref: '#/components/schemas/AddressRegexField'
        testnet_address_regex:
          $ref: '#/components/schemas/AddressRegexField'
        contract_address:
          type: string
          example: '0xdac17f958d2ee523a2206206994597c13d831ec7'
          description: The contract address for tokens on this network.
        is_ramp_sell_supported:
          type: boolean
          description: Indicates if ramp sell is supported for this currency.
          example: true
        is_ramp_buy_supported:
          type: boolean
          description: Indicates if ramp buy is supported for this currency.
          example: true
    CurrenciesListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          required:
            - pagination
          properties:
            pagination:
              $ref: '#/components/schemas/CursorPagination'
          description: Contains pagination information for the currencies list response.
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Currencies'
    UrlField:
      type: string
      example: https://example.com
      format: url
      description: A valid url
      x-oapi-codegen-extra-tags:
        validate: required|url
    AddressRegexField:
      type: string
      example: ^0x[a-fA-F0-9]{40}$
      format: address
      x-oapi-codegen-extra-tags:
        validate: required|regex
    BaseCustomerRequest:
      allOf:
        - type: object
          properties:
            phone:
              $ref: '#/components/schemas/PhoneField'
            birth_date:
              type: string
              example: 24-12-2000
              description: date of birth of the user
            address:
              $ref: '#/components/schemas/Address'
            identifying_information:
              type: array
              description: List of identification documents provided by the customer
              minItems: 0
              maxItems: 5
              items:
                $ref: '#/components/schemas/CustomerIdentifyingInformation'
            documents:
              type: array
              description: Additional supporting documents provided by the customer
              minItems: 0
              maxItems: 10
              uniqueItems: true
              items:
                $ref: '#/components/schemas/CustomerDocument'
    UpdateCustomerRequest:
      allOf:
        - $ref: '#/components/schemas/BaseCustomerRequest'
        - oneOf:
            - $ref: '#/components/schemas/CustomerCreateIndividual'
            - $ref: '#/components/schemas/CustomerCreateBusiness'
    CreateCustomerRequest:
      allOf:
        - type: object
          required:
            - email
            - has_accepted_terms
            - country_id
            - phone
            - address
            - birth_date
            - type
          properties:
            email:
              $ref: '#/components/schemas/EmailField'
            has_accepted_terms:
              type: boolean
              description: Indicates whether the customer has explicitly accepted the terms and conditions
            type:
              $ref: '#/components/schemas/BusinessCustomerType'
            country_id:
              $ref: '#/components/schemas/CountryID'
        - $ref: '#/components/schemas/BaseCustomerRequest'
        - oneOf:
            - $ref: '#/components/schemas/CustomerCreateIndividual'
            - $ref: '#/components/schemas/CustomerCreateBusiness'
    CustomerIdentifyingInformation:
      type: object
      required:
        - type
        - number
        - country
      description: Contains identification document details and related images for customer verification
      properties:
        type:
          type: string
          enum:
            - passport
            - national-id
            - drivers-license
            - selfie_video
          description: The category of identification document provided by the customer
        number:
          type: string
          maxLength: 50
          description: The unique identifier or serial number on the identification document
        country:
          $ref: '#/components/schemas/CountryID'
        expiry_date:
          type: string
          format: date
          description: The date when the identification document becomes invalid or expires
        image_front:
          type: string
          format: base64
          description: Base64 encoded image of the front side of the identification document
        image_back:
          type: string
          format: base64
          description: Base64 encoded image of the reverse side of the identification document
    CustomerDocument:
      type: object
      required:
        - purposes
        - file
      properties:
        purposes:
          type: array
          items:
            type: string
            enum:
              - certificate_of_incorporation
              - corporate_registry_extract
              - memart
              - corporate_structure_chart
              - board_resolution
              - aml_policy
              - regulatory_licenses
              - proof_of_funds
              - proof_of_wealth
              - proof_of_address
              - selfie_video
          description: Purposes for which the document is being submitted
        file:
          type: string
          description: Document file content in base64 format
    CustomerBusinessOwner:
      type: object
      required:
        - first_name
        - last_name
        - role
        - nationality
        - percentage_ownership
        - is_pep
      properties:
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        role:
          type: array
          items:
            type: string
            enum:
              - director
              - owner
              - shareholder
        percentage_ownership:
          type: number
          minimum: 0
          maximum: 100
        is_pep:
          type: boolean
          default: false
        pep_type:
          type: string
        nationality:
          $ref: '#/components/schemas/CountryID'
        address:
          $ref: '#/components/schemas/Address'
        proof_of_address:
          type: string
          x-oapi-codegen-extra-tag: null
        bvn:
          $ref: '#/components/schemas/BVNField'
        proof_of_id:
          type: string
          x-oapi-codegen-extra-tag: null
    CustomerBusinessTransaction:
      type: object
      required:
        - purpose
        - monthly_transaction_value
        - monthly_transaction_count
        - client_transaction_status
        - api_access_needed
      properties:
        purpose:
          type: string
          minLength: 3
          maxLength: 100
          description: The purpose of the customer's transactions
        monthly_transaction_value:
          type: string
          enum:
            - 100_usd_or_less
            - 100_usd_to_500_usd
            - 500_usd_to_1m_usd
            - above_1m_usd
          description: Expected monthly value of transactions in USD
        monthly_transaction_count:
          type: string
          enum:
            - 10_or_less
            - 10_to_50
            - 50_to_100
            - 100_to_200
            - above_200
          description: Expected number of transactions per month
        client_transaction_status:
          type: string
          enum:
            - self-owned
            - on-behalf
          description: Whether transactions are self-owned or on behalf of clients
        api_access_needed:
          type: boolean
          description: Whether API access is required for transactions
        api_integration_url:
          type: string
          format: uri
          description: Required when api_access_needed is true. URL for API integration
    CustomerBusinessRegistration:
      type: object
      required:
        - business_type
        - business_structure
        - business_regulation_status
        - registration_number
        - tax_identification_number
        - corporate_group_status
        - exchange_listing_status
        - license_number
      properties:
        business_type:
          type: string
          enum:
            - type_registered_company
            - type_sole_proprietorship
          description: Type of business organization
        business_structure:
          type: string
          enum:
            - public_limited_company
            - registered_business_name
            - other
            - limited_liability_company
            - limited_liability_partnership
          description: Legal structure of the business
        business_regulation_status:
          type: string
          enum:
            - regulated
            - unregulated
          description: Whether business is regulated or not
        registration_number:
          type: string
          maxLength: 20
          description: Business registration number
        tax_identification_number:
          type: string
          maxLength: 20
          description: Tax ID number of business
        corporate_group_status:
          type: string
          enum:
            - standalone_company
            - subsidiary
            - holding_company
          description: Status within corporate group structure
        exchange_listing_status:
          type: string
          enum:
            - listed_on_exchange
            - not_listed_on_exchange
            - owned_by_listed_company
          description: Whether business is listed on stock exchange
        license_number:
          type: string
          maxLength: 30
          description: Business license number if applicable
    CustomerCreateIndividual:
      type: object
      x-order: 2
      required:
        - first_name
        - last_name
      description: Individual name requirements
      properties:
        first_name:
          $ref: '#/components/schemas/NameField'
        middle_name:
          $ref: '#/components/schemas/NameField'
        last_name:
          $ref: '#/components/schemas/NameField'
    CustomerCreateBusiness:
      allOf:
        - $ref: '#/components/schemas/CustomerBusinessBase'
        - type: object
          required:
            - business_name
            - business_industry
          description: Business name requirements
          x-order: 2
          properties:
            business_owners:
              type: array
              items:
                $ref: '#/components/schemas/CustomerBusinessOwner'
            business_transaction:
              $ref: '#/components/schemas/CustomerBusinessTransaction'
            business_registration:
              $ref: '#/components/schemas/CustomerBusinessRegistration'
    CustomerBusinessIndustry:
      type: object
      required:
        - id
        - name
        - description
        - category
        - sector
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 1
        name:
          type: string
          description: Name of the industry
          x-order: 2
        description:
          type: string
          description: Description of the industry
          x-order: 3
        category:
          type: string
          description: Category of the industry
          x-order: 4
        sector:
          type: string
          description: Sector of the industry
          x-order: 5
    CustomerBusinessBase:
      type: object
      required:
        - business_name
        - business_industry
        - business_incorporation_date
      description: Business name requirements
      x-order: 2
      properties:
        business_name:
          type: string
          description: Name of the business
          maxLength: 100
          x-oapi-codegen-extra-tags:
            validate: required|maxlen:100
            filter: trim|lower|ucFirst
        business_industry:
          type: string
          minLength: 16
          maxLength: 24
          description: ID Industry or sector the business operates in
        business_incorporation_date:
          type: string
          format: date
          description: Business incorporation date
    Customer:
      allOf:
        - oneOf:
            - $ref: '#/components/schemas/CustomerCreateIndividual'
            - $ref: '#/components/schemas/CustomerBusinessBase'
        - type: object
          x-order: 1
          required:
            - id
            - status
            - type
            - email
            - country_id
            - business_id
            - has_accepted_terms_of_service
            - display_currency
            - deposit
            - payout
            - phone
            - address
            - created_at
            - updated_at
          properties:
            id:
              allOf:
                - $ref: '#/components/schemas/NanoID'
              x-order: 1
            business_id:
              allOf:
                - $ref: '#/components/schemas/NanoID'
              x-order: 2
            email:
              allOf:
                - $ref: '#/components/schemas/EmailField'
              x-order: 3
            status:
              type: string
              enum:
                - active
                - inactive
                - submitted
                - in_review
                - rejected
              x-order: 9
            country_id:
              $ref: '#/components/schemas/CountryID'
            type:
              allOf:
                - $ref: '#/components/schemas/BusinessCustomerType'
              x-order: 8
            phone:
              allOf:
                - $ref: '#/components/schemas/PhoneField'
              x-order: 8
            address:
              allOf:
                - $ref: '#/components/schemas/Address'
              x-order: 7
            display_currency:
              allOf:
                - $ref: '#/components/schemas/Currency'
              x-order: 7
            deposit:
              type: boolean
              description: User can deposit
              x-order: 8
            payout:
              type: boolean
              description: User can payout
              x-order: 8
            has_accepted_terms_of_service:
              type: boolean
              x-order: 10
            rejection_reasons:
              type: array
              items:
                type: string
              x-order: 11
            requirements_due:
              type: array
              items:
                type: string
              x-order: 12
            future_requirements_due:
              type: array
              items:
                type: string
              x-order: 13
            beneficial_owners:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    $ref: '#/components/schemas/EmailField'
              x-order: 14
            created_at:
              type: string
              format: date-time
              x-order: 15
            updated_at:
              type: string
              format: date-time
              x-order: 16
    BusinessCustomerType:
      type: string
      enum:
        - individual
        - business
    NameField:
      type: string
      example: John
      description: A valid name
      minLength: 3
      maxLength: 70
      x-oapi-codegen-extra-tags:
        validate: regex:^[-a-zA-Z0-9]+$|minLen:3|maxLen:70
        filter: trim|lower|ucFirst
    NanoID:
      type: string
      x-order: 2
      example: bus_123456789
      format: nanoid
      description: A valid id
      x-oapi-codegen-extra-tags:
        validate: required|nanoid
    EmailField:
      type: string
      example: bCnW7@example.com
      format: email
      description: A valid email address
      x-oapi-codegen-extra-tags:
        validate: required|email|check_temp_email
        filter: trim|lower
      x-go-type: string
    CountryID:
      type: string
      example: NG
      format: alpha2
      description: A valid country id
      minLength: 2
      maxLength: 2
      x-oapi-codegen-extra-tags:
        validate: alpha2
    PhoneField:
      type: string
      example: +234 8012345678
      format: phone
      description: A valid phone number. format `{{calling_code}} {{number}}`
      x-oapi-codegen-extra-tags:
        validate: phone
    Address:
      type: object
      description: Address of the business.
      required:
        - address_line_1
        - country_id
      properties:
        city:
          type: string
          example: Lekki
          x-oapi-codegen-extra-tags:
            mapstructure: city
        state:
          type: string
          example: Lagos
          x-oapi-codegen-extra-tags:
            mapstructure: state
        county:
          type: string
          example: Mombasa
          x-oapi-codegen-extra-tags:
            mapstructure: county
        country_id:
          type: string
          example: NG
          format: alpha2
          description: A valid country id
          x-oapi-codegen-extra-tags:
            validate: alpha2
            mapstructure: country_id
        address_line_1:
          type: string
          example: RT Lawal
          x-oapi-codegen-extra-tags:
            mapstructure: address_line_1
        address_line_2:
          type: string
          example: ''
          x-oapi-codegen-extra-tags:
            mapstructure: address_line_2
        province:
          type: string
          example: province
          x-oapi-codegen-extra-tags:
            mapstructure: province
        postal_code:
          type: string
          example: '12345'
          x-oapi-codegen-extra-tags:
            mapstructure: postal_code
    BVNField:
      type: string
      description: Bank Verification Number (BVN)
      format: number
      example: '12345678901'
      minLength: 11
      maxLength: 11
      x-oapi-codegen-extra-tags:
        validate: num|len:11
    Earning:
      type: object
      required:
        - id
        - plan_id
        - amount
        - interest
        - reference
        - title
        - created_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 1
        plan_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 2
        amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 3
        interest:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 4
        reference:
          type: string
          x-order: 5
        title:
          type: string
          x-order: 6
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          description: The date and time the earning was created
          x-order: 7
    Redemption:
      type: object
      required:
        - id
        - plan_id
        - amount
        - status
        - reference
        - is_fast
        - title
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 1
        plan_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 2
        amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 3
        status:
          type: string
          example: pending
          description: The status of the redemption
          x-order: 4
        penalty_fee:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 5
        penalty_reason:
          type: string
          x-order: 6
        reference:
          type: string
          x-order: 7
        is_fast:
          type: boolean
          x-order: 8
        title:
          type: string
          x-order: 9
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          description: The date and time the redemption was created
          x-order: 10
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          description: The date and time the redemption was updated
          x-order: 11
    CreateRedemptionRequest:
      type: object
      required:
        - amount
        - full_redemption
      properties:
        amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 1
        full_redemption:
          type: boolean
          example: true
          description: if true it will remove the amount left on the plan. It takes pending withdrawals into account
          x-order: 2
    Subscription:
      type: object
      required:
        - id
        - profile_id
        - plan_id
        - amount
        - reference
        - source
        - title
        - rate
        - source_amount
        - created_at
      properties:
        id:
          type: string
          example: 2dda9a1e-146b-4bd8-bf82-6f966083f2b8
          description: ID that represents a subscription
          x-order: 1
        profile_id:
          type: string
          example: 29af2d2d-e826-470b-a2f7-b476f3a99cf0
          description: Identifies the user who owns this subscription
          x-order: 2
        plan_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 3
        amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 4
        new_estimated_term_amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 5
        new_plan_amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 5
        reference:
          type: string
          x-order: 6
        source:
          type: string
          x-order: 7
        title:
          type: string
          x-order: 8
        rate:
          allOf:
            - $ref: '#/components/schemas/QuoteRate'
          x-order: 9
        source_amount:
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
          x-order: 10
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          x-order: 11
    CreateSubscriptionRequest:
      type: object
      required:
        - source_currency
        - target_currency
      properties:
        source_currency:
          $ref: '#/components/schemas/Currency'
        target_currency:
          $ref: '#/components/schemas/Currency'
        source_amount:
          type: string
          description: Source Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:target_amount|num
        target_amount:
          type: string
          description: Target Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:source_amount|num
    Product:
      type: object
      required:
        - id
        - base_currency
        - name
        - active
        - flexible
        - minimum
        - description
        - created_at
        - updated_at
        - provider
        - risk_score
        - ideal_for
        - type
        - terms
      properties:
        id:
          type: string
          example: 874984-234n890-42389n-9983
          description: UUID of the specific product
          x-order: 1
        base_currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 2
        name:
          type: string
          example: USDT
          description: Name of the earn product
          x-order: 3
        active:
          type: boolean
          example: false
          description: product is active for investment
          x-order: 4
        flexible:
          type: boolean
          example: false
          description: product can have flexible investment
          x-order: 5
        minimum:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 6
        maximum:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 7
        description:
          type: string
          example: Earn up to 7.5% APY
          description: Description of the earn product
          x-order: 8
        provider:
          type: object
          properties:
            name:
              type: string
              example: Provider
              description: Name of the provider
              x-order: 1
            url:
              type: string
              format: url
              example: https://nexo.io
              x-order: 2
          x-order: 9
        risk_score:
          type: string
          example: LOW
          x-order: 10
        ideal_for:
          type: string
          example: Conservative investors seeking higher yields with balanced risk and reliable returns.
          x-order: 11
        type:
          type: string
          example: savings
          enum:
            - savings
            - investments
          x-order: 12
        terms:
          type: array
          items:
            $ref: '#/components/schemas/BaseTermsSchema'
          x-order: 13
    BaseTermsSchema:
      type: object
      required:
        - apy
        - duration_in_days
      properties:
        duration_in_days:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 1
        apy:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 2
    CreatePlanRequest:
      type: object
      required:
        - product_id
        - source_currency
        - target_currency
        - is_compounding
        - goal
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 50
          example: My Savings Plan
          description: Name of the earn plan
          x-oapi-codegen-extra-tags:
            validate: min_len:3|max_len:50
            filter: trim|ucWord|escapeHtml
          x-order: 1
        product_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 2
        source_currency:
          $ref: '#/components/schemas/Currency'
        target_currency:
          $ref: '#/components/schemas/Currency'
        source_amount:
          type: string
          description: Source Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:target_amount|num
        target_amount:
          type: string
          description: Target Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:source_amount|num
        is_compounding:
          type: boolean
          description: Should the plan compound the interest to the compound interest
          example: true
        goal:
          type: string
          description: Goal for the plan, e.g. 'vacation', 'home', 'car'
          example: home
          x-oapi-codegen-extra-tags:
            validate: max_len:100
            filter: trim|ucWord|escapeHtml
        duration_in_days:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 6
    UpdatePlanRequest:
      type: object
      properties:
        name:
          type: string
          example: 874984-234n890-42389n-9983
          description: UUID of the specific product
          x-order: 1
    Plan:
      type: object
      required:
        - id
        - profile_id
        - product_id
        - name
        - goal
        - is_compound
        - accruing_interest
        - amount
        - summary
        - flexible
        - recurring
        - recurring_amount
        - terms
        - status
        - estimated_term_amount
        - rate
        - source_amount
        - created_at
        - updated_at
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 1
        profile_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          x-order: 2
        product_id:
          allOf:
            - $ref: '#/components/schemas/NanoID'
          description: ID that identifies the earn product associated with this plan
          x-order: 2
        name:
          type: string
          x-order: 3
        is_compound:
          type: boolean
          x-order: 4
        accruing_interest:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 5
        amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 6
        target_amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 7
        goal:
          type: string
          description: Goal for the plan, e.g. 'vacation', 'home', 'car'
          example: home
          x-oapi-codegen-extra-tags:
            validate: max_len:100
            filter: trim|ucWord|escapeHtml
          x-order: 8
        summary:
          type: object
          properties:
            subscribed:
              allOf:
                - $ref: '#/components/schemas/EarnAmountType'
              x-order: 1
            redeemed:
              allOf:
                - $ref: '#/components/schemas/EarnAmountType'
              x-order: 2
            earned:
              allOf:
                - $ref: '#/components/schemas/EarnAmountType'
              x-order: 3
          x-order: 9
        locked_until:
          type: string
          format: date-time
          x-order: 10
        recurring:
          type: boolean
          x-order: 11
        recurring_amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 12
        flexible:
          type: boolean
          description: True if the plan is a flexible plan and false if fixed
          x-order: 13
        terms:
          allOf:
            - $ref: '#/components/schemas/BaseTermsSchema'
          x-order: 13
        next_distribution_date:
          type: string
          description: The next date interest will be paid
          format: date-time
          x-order: 14
        next_subscription_date:
          type: string
          format: date-time
          x-order: 14
        status:
          x-order: 15
        estimated_term_amount:
          allOf:
            - $ref: '#/components/schemas/EarnAmountType'
          x-order: 16
        rate:
          allOf:
            - $ref: '#/components/schemas/QuoteRate'
          x-order: 17
        source_amount:
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
          x-order: 18
        created_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          x-order: 19
        updated_at:
          type: string
          format: date-time
          example: '2022-02-11T15:08:27.132269Z'
          x-order: 20
    EarnAmountType:
      allOf:
        - $ref: '#/components/schemas/AmountWithCurrency'
        - type: object
          properties:
            fiat:
              allOf:
                - $ref: '#/components/schemas/AmountWithCurrency'
              description: amount in fiat
              x-order: 3
    QuoteRate:
      type: object
      properties:
        product:
          type: string
          example: BTCUSDT
        source_currency:
          $ref: '#/components/schemas/Currency'
        target_currency:
          $ref: '#/components/schemas/Currency'
        rate:
          $ref: '#/components/schemas/Decimal'
        side:
          type: string
          enum:
            - buy
            - sell
          example: sell
        type:
          type: string
          enum:
            - FIXED
          example: FIXED
    ResourceID:
      type: string
      x-order: 1
      example: bus_123456789
      format: string
      description: A valid id
      x-oapi-codegen-extra-tags:
        validate: required|nanoid
    LookUpResponseObject:
      type: object
      required:
        - username
        - currency
        - network
        - address
        - country_id
      properties:
        username:
          type: string
          example: john_doe@busha
        currency:
          type: string
          example: BTC
        country_id:
          $ref: '#/components/schemas/CountryID'
        network:
          type: string
          example: BTC
        address:
          type: string
          example: tb1qj4263506wyu8khrz2dwce0agk8lhyjgy269rxr
        memo:
          type: string
          example: memo123
    ValidateDestinationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          required:
            - data
          properties:
            data:
              $ref: '#/components/schemas/ValidateDestinationResponseObject'
    ValidateDestinationResponseObject:
      allOf:
        - $ref: '#/components/schemas/ValidateDestinationRequest'
        - type: object
          properties:
            valid:
              type: boolean
              example: true
    ValidateDestinationRequest:
      type: object
      required:
        - type
        - currency
      properties:
        type:
          type: string
          example: address
          enum:
            - address
        address:
          type: string
          example: tb1qj4263506wyu8khrz2dwce0agk8lhyjgy269rxr
          description: |
            This is the address for type `address`
        currency:
          $ref: '#/components/schemas/Currency'
        network:
          type: string
          example: BTC
          description: |
            This specifies the blockchain network associated with the address receiving the payment, typically used with address type payouts.
        memo:
          type: string
          example: memo
          description: |
            This refers to the memo required for blockchain networks that mandate a memo for cryptocurrency transactions.
    ListBankResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Bank'
    Bank:
      type: object
      required:
        - name
        - code
        - currency
      properties:
        name:
          type: string
          x-order: 1
          example: Wema Bank
        code:
          type: string
          example: '000017'
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          example: NGN
    CountriesListResponse:
      allOf:
        - $ref: '#/components/schemas/CursorPagination'
        - type: object
          properties:
            data:
              type: array
              description: List of recipients
              items:
                $ref: '#/components/schemas/Country'
          required:
            - data
    Country:
      type: object
      required:
        - id
        - name
        - currency
        - payment_methods
        - payout_methods
      properties:
        id:
          allOf:
            - $ref: '#/components/schemas/CountryID'
          x-order: 1
        name:
          type: string
          x-order: 2
          example: Bitcoin
          description: The official name of the cryptocurrency.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyMini'
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PayObj'
        payout_methods:
          type: array
          items:
            $ref: '#/components/schemas/PayObj'
    CurrencyMini:
      type: object
      required:
        - code
        - name
        - symbol
      properties:
        code:
          allOf:
            - $ref: '#/components/schemas/Currency'
        name:
          type: string
          example: Bitcoin
          description: The official name of the cryptocurrency.
        symbol:
          type: string
          example: $
          description: The official symbol of the cryptocurrency.\
    Provider:
      type: string
      description: A provider of a payment option
      example: Airtel Money
    PayObj:
      type: object
      required:
        - id
        - name
        - min
        - max
        - currency
        - processing_time
        - enabled
      properties:
        id:
          type: string
          example: Bitcoin
          description: The id of the payment option.
        name:
          type: string
          example: Bitcoin
          description: The name of the payment option.
        min:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        max:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
        processing_time:
          type: string
          example: 0-15 minutes
          description: The average time to process via the payment option.
        enabled:
          type: boolean
          example: true
          description: This shows if the payment option is available for use
    Pairs:
      type: object
      required:
        - id
        - base
        - counter
        - type
        - is_buy_supported
        - is_sell_supported
        - buy_price
        - sell_price
      properties:
        id:
          type: string
          x-order: 1
          example: eth-btc
        base:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 2
        counter:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 3
        type:
          type: string
          x-order: 4
          enum:
            - crypto
            - fiat
            - stablecoin
        buy_price:
          x-order: 5
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
        sell_price:
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
          x-order: 6
        is_buy_supported:
          x-order: 7
          type: boolean
        is_sell_supported:
          x-order: 8
          type: boolean
        min_buy_amount:
          x-order: 9
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
        min_sell_amount:
          x-order: 10
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
        max_buy_amount:
          x-order: 11
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
        max_sell_amount:
          x-order: 12
          allOf:
            - $ref: '#/components/schemas/AmountWithCurrency'
        base_decimal:
          type: string
          x-order: 13
          example: '6'
        counter_decimal:
          type: string
          x-order: 14
          example: '6'
    PairsListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            data:
              type: array
              maxItems: 100
              items:
                $ref: '#/components/schemas/Pairs'
    ExampleQuoteResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            data:
              type: object
              properties:
                greeting:
                  type: string
                  example: Welcome to the quote service!
    UnAuthPayInObj:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          example: address
          enum:
            - address
            - mobile_money
            - temporary_bank_account
        network:
          type: string
          example: BTC
          description: |
            This specifies the blockchain network associated with the address receiving the payment, typically used with address type payouts.
    PayInObj:
      allOf:
        - $ref: '#/components/schemas/UnAuthPayInObj'
        - type: object
          properties:
            phone:
              $ref: '#/components/schemas/PhoneField'
    RecipientDetails:
      type: object
      properties:
        account_name:
          type: string
        bank_name:
          type: string
        account_number:
          type: string
        country:
          type: string
        provider:
          type: string
        currency:
          type: string
        phone_number:
          type: string
        name:
          type: string
        email:
          type: string
          example: sbsbs@busha.co
    PayOutObj:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          example: address
          enum:
            - address
            - bank_transfer
            - mobile_money
        recipient_id:
          type: string
          example: 64ae8c26ea1033204c805a8a
          description: |
            This represents the recipient ID, used for `mobile_money` and `bank_transfer` types.
        address:
          type: string
          example: tb1qj4263506wyu8khrz2dwce0agk8lhyjgy269rxr
          description: |
            This could be the address, user email or username for type `address`.
        network:
          type: string
          example: BTC
          description: |
            This specifies the blockchain network associated with the address receiving the payment, typically used with address type payouts.
        memo:
          type: string
          example: memo
          description: |
            This refers to the memo required for blockchain networks that mandate a memo for cryptocurrency transactions.
    PaymentObj:
      allOf:
        - $ref: '#/components/schemas/PayOutObj'
        - type: object
          properties:
            profile_id:
              type: string
              example: profile-id-1234
            memo:
              type: string
              example: address memo
            recipient_details:
              $ref: '#/components/schemas/RecipientDetails'
            blockchain_hash:
              type: string
              x-order: 16
              example: 31b99c79e2fb7554d0a9421867a53a80e6810cdfd2b06826eec1b2a22974b171
            blockchain_url:
              type: string
              x-order: 16
              example: https://explorer.com/tx/31b99c79e2fb7554d0a9421867a53a80e6810cdfd2b06826eec1b2a22974b171
            session_id:
              type: string
              x-order: 16
              example: 31b99c79e2fb7554d0a9421867a53a80e6810cdfd2b06826eec1b2a22974b171
            expires_at:
              type: string
              format: date-time
              example: '2023-10-15T12:15:30Z'
    QuoteReference:
      type: string
      x-order: 2
      example: QUO_123456abc
      maxLength: 64
      minLength: 12
    UnauthenticatedCreateQuote:
      type: object
      required:
        - source_currency
        - target_currency
      properties:
        source_currency:
          $ref: '#/components/schemas/Currency'
        target_currency:
          $ref: '#/components/schemas/Currency'
        source_amount:
          type: string
          description: Source Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:target_amount|num
        target_amount:
          type: string
          description: Target Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:source_amount|num
        pay_in:
          $ref: '#/components/schemas/UnAuthPayInObj'
        pay_out:
          $ref: '#/components/schemas/PayOutObj'
    CreateQuoteRequest:
      type: object
      required:
        - source_currency
        - target_currency
      properties:
        source_currency:
          $ref: '#/components/schemas/Currency'
        target_currency:
          $ref: '#/components/schemas/Currency'
        reference:
          $ref: '#/components/schemas/QuoteReference'
        source_amount:
          type: string
          description: Source Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:target_amount|num
        target_amount:
          type: string
          description: Target Amount. Either `source_amount` or `target_amount` must be set.
          example: '100'
          x-go-type: decimal.Decimal
          x-go-type-import:
            path: github.com/shopspring/decimal
            name: decimal
            x-oapi-codegen-extra-tags:
              validate: requiredWithout:source_amount|num
        pay_in:
          allOf:
            - $ref: '#/components/schemas/PayInObj'
            - type: object
              properties:
                phone:
                  $ref: '#/components/schemas/PhoneField'
        pay_out:
          $ref: '#/components/schemas/PayOutObj'
    Quote:
      type: object
      required:
        - id
        - source_currency
        - target_currency
        - source_amount
        - target_amount
        - profile_id
        - reference
        - created_at
        - updated_at
        - status
        - rate
        - fees
      properties:
        id:
          $ref: '#/components/schemas/ResourceID'
        source_currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 5
        target_currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 6
        source_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 7
        target_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 8
        profile_id:
          $ref: '#/components/schemas/NanoID'
        rate:
          allOf:
            - $ref: '#/components/schemas/QuoteRate'
          x-order: 9
        fees:
          type: array
          x-order: 10
          items:
            $ref: '#/components/schemas/Fee'
        pay_in:
          allOf:
            - $ref: '#/components/schemas/PaymentObj'
          x-order: 11
        pay_out:
          allOf:
            - $ref: '#/components/schemas/PaymentObj'
          x-order: 12
        reference:
          allOf:
            - $ref: '#/components/schemas/QuoteReference'
          x-order: 12
        status:
          type: string
          x-order: 13
          enum:
            - pending
          example: pending
        expires_at:
          type: string
          x-order: 14
          format: date-time
          example: '2023-12-01T15:04:05Z'
        created_at:
          type: string
          x-order: 15
          format: date-time
          example: '2023-10-15T12:15:30Z'
        updated_at:
          type: string
          x-order: 16
          format: date-time
          example: '2023-10-15T12:20:45Z'
        two_step:
          $ref: '#/components/schemas/TwoStep'
    PaymentOptionObj:
      type: object
      required:
        - channel
        - name
        - description
        - currency
        - payment_method_ids
        - minimum_fee
        - maximum_fee
        - minimum_amount
        - maximum_amount
        - recommended
        - new
        - support_conversion
      properties:
        channel:
          type: string
        name:
          type: string
        description:
          type: string
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
        payment_method_ids:
          type: array
          items:
            $ref: '#/components/schemas/NanoID'
        maximum_fee:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        minimum_fee:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        maximum_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        minimum_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
        recommended:
          type: boolean
        new:
          type: boolean
        support_conversion:
          type: boolean
    TwoStep:
      type: object
      required:
        - type
        - message
        - resend_allowed
      x-order: 17
      properties:
        type:
          type: string
          enum:
            - authenticator
          example: authenticator
          description: the type of two step verification required
        message:
          type: string
          example: Enter your 2FA code to continue
        resend_allowed:
          type: boolean
          example: false
          description: If the code can be resent
    Fee:
      type: object
      x-order: 40
      required:
        - name
        - amount
        - type
      properties:
        name:
          type: string
          example: processing_fee
        amount:
          $ref: '#/components/schemas/AmountWithCurrency'
        converted_amount:
          $ref: '#/components/schemas/AmountWithCurrency'
        type:
          type: string
          example: FIXED
    CreateRecipientRequest:
      type: object
      required:
        - currency_id
        - country_id
        - type
        - legal_entity_type
        - fields
      properties:
        currency_id:
          $ref: '#/components/schemas/Currency'
        country_id:
          $ref: '#/components/schemas/CountryID'
        type:
          type: string
          description: Type of recipient account
          example: ngn_bank_transfer
        legal_entity_type:
          type: string
          description: Type of legal entity
          enum:
            - business
            - personal
          example: business
        fields:
          type: array
          description: List of fields containing recipient details
          items:
            type: object
            required:
              - name
              - value
            properties:
              name:
                type: string
                description: Field identifier
                example: bank_name
              value:
                type: string
                description: Field value
                example: Access Bank Nigeria
      example:
        currency_id: NGN
        country_id: NG
        type: ngn_bank_transfer
        legal_entity_type: business
        fields:
          - name: bank_name
            value: Access Bank Nigeria
          - name: account_number
            value: '1234567890'
          - name: bank_code
            value: '000014'
          - name: account_name
            value: Joh Doe
    RecipientField:
      type: object
      required:
        - value
        - display_name
        - name
        - is_copyable
        - is_visible
        - required
      properties:
        value:
          type: string
          description: The value of the recipient field
          example: Access Bank Nigeria
        display_name:
          type: string
          description: Human-readable name of the field
          example: Bank Name
        name:
          type: string
          description: System identifier for the field
          example: bank_name
        is_copyable:
          type: boolean
          description: Whether the field value can be copied
          example: false
        is_visible:
          type: boolean
          description: Whether the field should be displayed
          example: true
        required:
          type: boolean
          description: Whether the field is required
          example: true
    ResolveBankAccountRequest:
      type: object
      required:
        - country_id
        - currency_id
        - channel
        - bank_code
        - account_number
      properties:
        currency_id:
          $ref: '#/components/schemas/Currency'
        country_id:
          $ref: '#/components/schemas/CountryID'
        channel:
          $ref: '#/components/schemas/Channel'
        bank_code:
          type: string
          description: Bank sort code
          example: '000013'
        account_number:
          type: string
          description: Account number for receiving bank
          example: '0123456789'
      example:
        currency_id: NGN
        country_id: NG
        channel: mobile_money
        bank_code: '000013'
        account_number: '0123456789'
    Channel:
      type: string
      description: Channel for the transfer
      enum:
        - mobile_money
        - bank_transfer
      example: bank_transfer
    Recipient:
      type: object
      required:
        - object
        - id
        - user_id
        - profile_id
        - type
        - legal_entity_type
        - owned_by_customer
        - active
        - created_at
        - updated_at
        - fields
      properties:
        object:
          type: string
          description: Type of the object
          example: recipient
        id:
          $ref: '#/components/schemas/ID'
        user_id:
          $ref: '#/components/schemas/ID'
        profile_id:
          $ref: '#/components/schemas/ID'
        currency_id:
          $ref: '#/components/schemas/Currency'
        country_id:
          $ref: '#/components/schemas/CountryID'
        type:
          type: string
          description: Type of recipient account
          example: ngn_bank_transfer
        legal_entity_type:
          type: string
          description: Type of legal entity
          enum:
            - business
            - personal
          example: business
        owned_by_customer:
          type: boolean
          description: Whether the recipient is owned by the customer
          example: true
        active:
          type: boolean
          description: Whether the recipient is active
          example: true
        created_at:
          type: string
          format: date-time
          description: Timestamp when the recipient was created
          example: '2024-05-16T13:06:31.409336+01:00'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the recipient was last updated
          example: '2024-05-16T13:06:31.409336+01:00'
        fields:
          type: array
          description: List of fields containing recipient details
          items:
            $ref: '#/components/schemas/RecipientField'
    RecipientListResponse:
      allOf:
        - $ref: '#/components/schemas/CursorPagination'
        - type: object
          properties:
            data:
              type: array
              description: List of recipients
              items:
                $ref: '#/components/schemas/Recipient'
          required:
            - data
      example:
        status: success
        message: Recipients retrieved successfully
        data:
          - object: recipient
            id: 8014c2ee-c70f-4c72-8d9f-c8b9d708a688
            user_id: b8277d1c-1bde-46ef-92ce-ebb4752eede5
            profile_id: b8277d1c-1bde-46ef-92ce-ebb4752eede5
            currency_id: NGN
            country_id: NG
            type: ngn_bank_transfer
            legal_entity_type: business
            owned_by_customer: true
            active: true
            created_at: '2024-05-16T13:06:31.409336+01:00'
            updated_at: '2024-05-16T13:06:31.409336+01:00'
            fields:
              - value: Access Bank Nigeria
                display_name: Bank Name
                name: bank_name
                is_copyable: false
                is_visible: true
                required: true
              - value: '0013246052'
                display_name: Account Number
                name: account_number
                is_copyable: false
                is_visible: true
                required: true
              - value: '000014'
                display_name: Bank Code
                name: bank_code
                is_copyable: false
                is_visible: false
                required: true
              - value: JOHN DOE
                display_name: Account Name
                name: full_name
                is_copyable: false
                is_visible: true
                required: true
    RecipientRequirementListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/RecipientRequirement'
    RecipientRequirement:
      type: object
      required:
        - id
        - countries
        - currencies
        - name
        - description
        - type
        - fields
        - active
        - created_at
      properties:
        id:
          type: string
          x-order: 1
        currencies:
          type: array
          x-order: 5
          items:
            $ref: '#/components/schemas/Currency'
        countries:
          type: array
          x-order: 6
          items:
            $ref: '#/components/schemas/CountryID'
        name:
          type: string
          x-order: 2
        description:
          type: string
          x-order: 7
        type:
          type: string
          x-order: 3
        fields:
          type: array
          items:
            $ref: '#/components/schemas/RequirementField'
        active:
          type: boolean
          x-order: 4
        created_at:
          type: string
          format: date-time
    RequirementField:
      type: object
      required:
        - display_name
        - name
        - hint_word
        - type
        - is_copyable
        - is_visible
        - required
        - order
        - unique
      properties:
        display_name:
          type: string
        name:
          type: string
        hint_word:
          type: string
        type:
          type: string
        is_copyable:
          type: boolean
        is_visible:
          type: boolean
        validator:
          type: string
        required:
          type: boolean
        message:
          type: string
        unique:
          type: boolean
        order:
          type: integer
        description:
          type: string
        options:
          type: array
          items:
            type: object
            required:
              - label
              - value
            properties:
              label:
                type: string
              value:
                type: string
    ResolveBankAccountResponse:
      type: object
      required:
        - country_id
        - currency_id
        - channel
        - account_number
        - bank_code
        - account_name
        - bank_name
      properties:
        country_id:
          $ref: '#/components/schemas/CountryID'
        currency_id:
          $ref: '#/components/schemas/Currency'
        channel:
          $ref: '#/components/schemas/Channel'
        bank_code:
          type: string
          description: Bank sort code
          example: '000013'
        account_number:
          type: string
          description: Account number for receiving bank
          example: '0123456789'
        account_name:
          type: string
          description: Name on receiving account
          example: John Doe
        bank_name:
          type: string
          description: Name of receiving bank
          example: Trust Bank
    TransactionsListResponse:
      allOf:
        - $ref: '#/components/schemas/CursorPagination'
        - type: object
          properties:
            data:
              type: array
              description: List of recipients
              items:
                $ref: '#/components/schemas/Transaction'
          required:
            - data
    Transaction:
      type: object
      required:
        - object
        - id
        - user_id
        - profile_id
        - currency
        - amount
        - category
        - reference
        - description
        - sub_description
        - status
        - status_description
        - is_credit
        - is_fiat
        - created_at
      properties:
        object:
          type: string
          description: Type of the object
          example: transaction
        id:
          $ref: '#/components/schemas/ID'
        user_id:
          $ref: '#/components/schemas/ID'
        profile_id:
          $ref: '#/components/schemas/ID'
        currency:
          $ref: '#/components/schemas/Currency'
        amount:
          $ref: '#/components/schemas/Decimal'
        category:
          type: string
          description: transaction category
          example: deposit
        reference:
          type: string
          description: transaction reference
          example: ORD_7ain6FEDWB
        description:
          type: string
          description: transaction description
          example: Bought US Dollar
        sub_description:
          type: string
          description: transaction sub_description
          example: With USD Token
        status:
          type: string
          description: transaction status
          example: completed
        status_description:
          type: string
          description: transaction status_description
          example: This has been processed by Busha
        is_credit:
          type: boolean
          description: tells if transaction is a credit
        is_fiat:
          type: boolean
          description: tells if transaction is in a fiat currency
        created_at:
          type: string
          format: date-time
          description: Timestamp when the transaction was created
          example: '2024-05-16T13:06:31.409336+01:00'
    Transfer:
      type: object
      required:
        - id
        - quote_id
        - description
        - sub_description
        - source_currency
        - target_currency
        - source_amount
        - target_amount
        - profile_id
        - created_at
        - updated_at
        - status
        - rate
        - fees
      properties:
        id:
          $ref: '#/components/schemas/ResourceID'
        quote_id:
          $ref: '#/components/schemas/NanoID'
        description:
          type: string
          example: Bought Bitcoin
          x-order: 3
        sub_description:
          type: string
          example: With Naira
          x-order: 4
        source_currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 5
        target_currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          x-order: 6
        source_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 7
        target_amount:
          allOf:
            - $ref: '#/components/schemas/Decimal'
          x-order: 8
        trade:
          type: string
          example: buy
          x-order: 9
        profile_id:
          $ref: '#/components/schemas/NanoID'
        rate:
          allOf:
            - $ref: '#/components/schemas/QuoteRate'
          x-order: 10
        fees:
          type: array
          x-order: 11
          items:
            $ref: '#/components/schemas/Fee'
        pay_in:
          allOf:
            - $ref: '#/components/schemas/PaymentObj'
          x-order: 12
        pay_out:
          allOf:
            - $ref: '#/components/schemas/PaymentObj'
          x-order: 13
        status:
          type: string
          x-order: 14
          enum:
            - pending
            - processing
            - cancelled
            - funds_converted
            - funds_received
            - outgoing_payment_sent
            - funds_delivered
          example: pending
        timeline:
          allOf:
            - $ref: '#/components/schemas/TransferTimeline'
          x-order: 15
        expires_at:
          type: string
          x-order: 17
          format: date-time
          example: '2023-12-01T15:04:05Z'
        created_at:
          type: string
          x-order: 18
          format: date-time
          example: '2023-10-15T12:15:30Z'
        updated_at:
          type: string
          x-order: 19
          format: date-time
          example: '2023-10-15T12:20:45Z'
    CreateTransferRequest:
      type: object
      required:
        - quote_id
      properties:
        quote_id:
          $ref: '#/components/schemas/NanoID'
    TransferTimeline:
      type: object
      required:
        - total_steps
        - current_step
        - transfer_status
        - events
      properties:
        total_steps:
          type: integer
          x-order: 1
        current_step:
          type: integer
          x-order: 2
        transfer_status:
          type: string
          x-order: 3
        events:
          type: array
          items:
            $ref: '#/components/schemas/Timeline'
    SimulateDepositRequest:
      type: object
      required:
        - transfer_id
        - status
      properties:
        transfer_id:
          $ref: '#/components/schemas/NanoID'
        status:
          type: string
          enum:
            - failed
            - completed
          example: completed
          description: This is the status for simulated transaction.
    Timeline:
      type: object
      required:
        - step
        - done
        - status
        - title
        - description
      properties:
        step:
          type: integer
          x-order: 1
          example: 1
        done:
          type: boolean
          x-order: 2
          example: true
        status:
          type: string
          x-order: 3
          enum:
            - pending
            - processing
            - funds_converted
            - funds_received
            - outgoing_payment_sent
            - funds_delivered
            - failed
            - completed
        title:
          type: string
          x-order: 4
          example: Transfer started
        description:
          type: string
          x-order: 5
          example: Transfer started
          description: Waiting for payment
        timestamp:
          type: string
          x-order: 6
          format: date-time
          example: '2023-10-15T12:15:30Z'
  responses:
    BalanceError4XX:
      description: 409 error when a balance with the same currency already exists for a user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    CurrenciesError4XX:
      description: Error from customer resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    CustomerError4XX:
      description: Something went wrong in Customer resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    CustomerResponse:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Customer'
    CustomerBusinessIndustries:
      description: Successful response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomerBusinessIndustry'
    CustomerListResponse:
      description: Customer List Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - pagination
                  - data
                properties:
                  pagination:
                    $ref: '#/components/schemas/CursorPagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
    GeneralResponse:
      description: A general response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
    RedemptionResponse:
      description: Successful Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Redemption'
    Error4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    HealthError4XX:
      description: 409 error when a balance with the same currency already exists for a user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    LookupResponses:
      description: Successful Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    description: List of Plans
                    items:
                      $ref: '#/components/schemas/LookUpResponseObject'
    MiscellaneousError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    PairError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    QuoteError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    QuoteResponse:
      description: Quote Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Quote'
    QuotesListResponse:
      description: Quotes List Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - pagination
                  - data
                properties:
                  pagination:
                    $ref: '#/components/schemas/CursorPagination'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Quote'
    PaymentOptionsListResponse:
      description: Payment Options List Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PaymentOptionObj'
    RecipientError4XX:
      description: Recipient Error sample
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    TransactionsError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    TransferError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            not_found_error:
              $ref: '#/components/examples/NotFoundError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    DepositError4XX:
      description: Default
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            default:
              $ref: '#/components/examples/DefaultError'
            unauthorized_error:
              $ref: '#/components/examples/UnAuthorizedError'
            request_validation_error:
              $ref: '#/components/examples/RequestValidationError'
            schema_validation_error:
              $ref: '#/components/examples/SchemaValidationError'
    TransferResponse:
      description: Transfer Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Transfer'
    DepositResponse:
      description: Deposit Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - type: object
    TransferListResponse:
      description: Transfer List Response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/BaseSchema'
              - $ref: '#/components/schemas/CursorPagination'
              - type: object
                properties:
                  data:
                    type: array
                    description: List of transfers
                    items:
                      $ref: '#/components/schemas/Transfer'
                required:
                  - data
  securitySchemes:
    Auth:
      type: http
      scheme: bearer
      description: Bearer Authentication
  examples:
    DefaultError:
      description: Default error
      value:
        error:
          name: bad_request
          message: Invalid request
    NotFoundError:
      description: Not Found error
      value:
        error:
          name: resource_not_found
          message: Resource Not Found
    UnAuthorizedError:
      description: Unauthorized Error
      value:
        error:
          name: unauthorized
          message: Unauthorized request
    RequestValidationError:
      description: Request Validation error example
      value:
        error:
          name: request_validation
          message: Validation error
        fields:
          field1:
            - reason: One of target and source amount must be set
          field2:
            - reason: One of target and source amount must be set
    SchemaValidationError:
      description: Schema validation error example
      value:
        error:
          name: schema_validation
          message: Error Validating Requests
        schema:
          - reason: The request body is defined as an object. However, it does not meet the schema requirements of the specification
            fix: Ensure that the object being submitted, matches the schema correctly
            schema_validation_error:
              - 'minLength: got 3, want 12'
  requestBodies:
    CreateRedemptionRequest:
      description: Create Earn Redemption Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateRedemptionRequest'
